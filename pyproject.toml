[tool.poetry]
name = "pulsar-compose"
version = "0.1.1"
description = "Pulsar Workflow Engine for orchestrating AI agents"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.scripts]
pulsar = "cli.main:main"

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2.0.0"
click = "^8.1.7"
openai = "^1.3.0"
jinja2 = "^3.1.2"
pyyaml = "^6.0"
anthropic = "^0.7.8"
aiohttp = "^3.9.1"
tenacity = "^8.2.3"
rich = "^13.7.0"
httpx = "<0.25.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
pytest-benchmark = "^4.0.0"
pytest-html = "^4.1.1"
pytest-timeout = "^2.2.0"
responses = "^0.24.1"
faker = "^20.1.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=agents",
    "--cov=engine", 
    "--cov=models",
    "--cov=cli",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=59",
    "-v",
    "--tb=short"
]
markers = [
    "unit: Unit tests for individual components",
    "integration: Tests for component interactions",
    "e2e: End-to-end workflow tests",
    "performance: Performance and load tests",
    "slow: Slow running tests",
    "mock: Tests using mock providers"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["agents", "engine", "models", "cli"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pulsar-compose"
version = "0.1.1"
description = "Docker-like AI workflow orchestration engine"
authors = [
    {name = "Pulsar Team", email = "hello@pulsar-compose.dev"}
]
readme = "README.md"
license = "MIT"
keywords = ["ai", "workflow", "orchestration", "llm", "automation", "docker"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "click>=8.1.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "openai>=1.3.0",
    "anthropic>=0.7.8",
    "jinja2>=3.1.2",
    "aiohttp>=3.9.1",
    "tenacity>=8.2.3",
    "rich>=13.7.0",
    "httpx<0.25.0",
]

[project.scripts]
pulsar = "cli.main:cli"

[project.urls]
Homepage = "https://github.com/lsalihi/pulsar-compose"
Documentation = "https://pulsar-compose.readthedocs.io"
Repository = "https://github.com/lsalihi/pulsar-compose"
"Bug Reports" = "https://github.com/lsalihi/pulsar-compose/issues"
"Changelog" = "https://github.com/lsalihi/pulsar-compose/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["agents", "cli", "engine", "models", "engine.input_providers", "engine.step_handlers"]

[tool.setuptools.package-data]
"*" = ["*.yml", "*.yaml", "*.json", "*.md", "*.txt"]