version: "0.1"
name: "Full-Stack Application Generator"
description: "A complex multi-agent workflow that designs and implements a complete full-stack application"
agents:
  architect:
    model: "gpt-4"
    provider: "openai"
    prompt: "Design a complete system architecture for a {{input}} application. Include: tech stack recommendations, database schema, API endpoints, frontend components, and deployment strategy. Be specific and comprehensive."
    parameters:
      temperature: 0.4
      max_tokens: 1200

  backend_developer:
    model: "claude-3-sonnet-20240229"
    provider: "anthropic"
    prompt: "Implement the backend for this application based on the architecture: {{architect.output}}. Write complete, production-ready code for the API server, database models, and business logic. Include proper error handling and documentation."
    parameters:
      temperature: 0.3
      max_tokens: 2500

  frontend_developer:
    model: "gpt-4"
    provider: "openai"
    prompt: "Create the frontend application based on this architecture: {{architect.output}}. Implement responsive UI components, state management, and API integration. Use modern frameworks and best practices."
    parameters:
      temperature: 0.4
      max_tokens: 2500

  database_specialist:
    model: "claude-3-haiku-20240307"
    provider: "anthropic"
    prompt: "Design and implement the database schema and migrations for: {{architect.output}}. Include table structures, relationships, indexes, and sample data. Ensure data integrity and performance."
    parameters:
      temperature: 0.2
      max_tokens: 1000

  tester:
    model: "gpt-4"
    provider: "openai"
    prompt: "Write comprehensive tests for this application. Backend code: {{backend_developer.output}}. Frontend code: {{frontend_developer.output}}. Database schema: {{database_specialist.output}}. Include unit tests, integration tests, and API tests."
    parameters:
      temperature: 0.3
      max_tokens: 1500

  devops_engineer:
    model: "claude-3-haiku-20240307"
    provider: "anthropic"
    prompt: "Create deployment and DevOps configuration for this application. Architecture: {{architect.output}}. Include Docker files, CI/CD pipeline, environment configuration, and monitoring setup."
    parameters:
      temperature: 0.2
      max_tokens: 1200

  documentation_writer:
    model: "gpt-4"
    provider: "openai"
    prompt: "Write comprehensive documentation for this application. Include README, API documentation, deployment guide, and user manual. Code: {{backend_developer.output}}, {{frontend_developer.output}}"
    parameters:
      temperature: 0.4
      max_tokens: 1000

workflow:
  - type: agent
    step: "design_architecture"
    agent: "architect"
    save: "system_architecture"

  - type: agent
    step: "implement_database"
    agent: "database_specialist"
    save: "database_schema"

  - type: agent
    step: "implement_backend"
    agent: "backend_developer"
    save: "backend_code"

  - type: agent
    step: "implement_frontend"
    agent: "frontend_developer"
    save: "frontend_code"

  - type: agent
    step: "setup_devops"
    agent: "devops_engineer"
    save: "devops_config"

  - type: agent
    step: "write_tests"
    agent: "tester"
    save: "test_suite"

  - type: agent
    step: "create_documentation"
    agent: "documentation_writer"
    save: "documentation"