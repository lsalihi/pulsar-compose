version: "0.1"
name: "Code Review and Improvement"
description: "An automated code review workflow that analyzes, critiques, and suggests improvements for code submissions"
agents:
  code_analyzer:
    model: "gpt-4"
    provider: "openai"
    prompt: "Analyze this code for quality, structure, and best practices: {{input}}. Identify: code complexity, potential bugs, security issues, performance concerns, and adherence to coding standards. Provide specific line references."
    parameters:
      temperature: 0.3
      max_tokens: 1000

  security_reviewer:
    model: "claude-3-sonnet-20240229"
    provider: "anthropic"
    prompt: "Perform a security review of this code: {{input}}. Check for: injection vulnerabilities, authentication issues, authorization problems, data exposure risks, and other security concerns. Rate severity and provide remediation steps."
    parameters:
      temperature: 0.2
      max_tokens: 800

  performance_optimizer:
    model: "gpt-4"
    provider: "openai"
    prompt: "Analyze this code for performance issues: {{input}}. Identify: algorithmic inefficiencies, memory leaks, database query optimization opportunities, caching opportunities, and scalability concerns. Suggest specific improvements."
    parameters:
      temperature: 0.4
      max_tokens: 900

  test_coverage_analyzer:
    model: "claude-3-haiku-20240307"
    provider: "anthropic"
    prompt: "Evaluate test coverage and quality for this code: {{input}}. Identify untested code paths, suggest additional test cases, check test quality, and recommend testing strategies. Provide specific test scenarios."
    parameters:
      temperature: 0.3
      max_tokens: 700

  improvement_suggester:
    model: "gpt-4"
    provider: "openai"
    prompt: "Based on these reviews - Code Analysis: {{code_analyzer.output}}, Security: {{security_reviewer.output}}, Performance: {{performance_optimizer.output}}, Testing: {{test_coverage_analyzer.output}} - suggest comprehensive improvements for this code: {{input}}. Prioritize fixes by impact and effort."
    parameters:
      temperature: 0.5
      max_tokens: 1200

  refactoring_specialist:
    model: "claude-3-sonnet-20240229"
    provider: "anthropic"
    prompt: "Provide refactored code based on these improvement suggestions: {{improvement_suggester.output}}. Original code: {{input}}. Focus on maintainability, readability, and modern best practices while preserving functionality."
    parameters:
      temperature: 0.3
      max_tokens: 1500

workflow:
  - type: agent
    step: "analyze_code"
    agent: "code_analyzer"
    save: "code_analysis"

  - type: agent
    step: "review_security"
    agent: "security_reviewer"
    save: "security_review"

  - type: agent
    step: "optimize_performance"
    agent: "performance_optimizer"
    save: "performance_review"

  - type: agent
    step: "analyze_testing"
    agent: "test_coverage_analyzer"
    save: "testing_review"

  - type: conditional
    step: "critical_issues_check"
    if: "{{security_review | regex_search(r'Critical.*(\\d+)') | int > 0 or security_review | regex_search(r'High.*(\\d+)') | int > 2}}"
    then:
      - type: agent
        step: "urgent_improvements"
        agent: "improvement_suggester"
        context: "Focus on critical security and major issues that block deployment."
        save: "priority_improvements"
      - type: agent
        step: "security_refactor"
        agent: "refactoring_specialist"
        context: "Prioritize security fixes in the refactoring."
        save: "refactored_code"
    else:
      - type: agent
        step: "suggest_improvements"
        agent: "improvement_suggester"
        save: "all_improvements"
      - type: agent
        step: "refactor_code"
        agent: "refactoring_specialist"
        save: "refactored_code"